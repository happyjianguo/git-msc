<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd"
		               >

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:public_system.properties" />
	
	<context:component-scan base-package="com.shyl">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
	<!-- Shiro securityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroMyRealm" />
		<!-- <property name="sessionManager" ref="sessionManager" /> -->
		<!-- 需要使用cache的话加上这句 -->
		<property name="cacheManager" ref="shiroEhcacheManager"></property>
	</bean>
	

	<!--Session配置 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="sessionDAO" ref="shiroSessionDAO" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionIdCookie" ref="wapsession" />		
	</bean>
	
	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID, 
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="wapsession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="WAPSESSIONID" />
	</bean>

	<!-- 定时清理僵尸session，Shiro会启用一个后台守护线程定时执行清理操作 用户直接关闭浏览器造成的孤立会话 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="3600000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	<!-- 需要使用cache的话加上这句 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:spring-shiro-ehcache.xml" />
	</bean>
	
	<!-- 项目自定义的Realm -->
	<bean id="shiroMyRealm" class="com.shyl.sys.service.realm.ShiroMyRealm"></bean>
	
	
	<bean id="formAuthenticationFilter" class="com.shyl.sys.service.realm.AuthenticationFilter">
		<property name="usernameParam" value="userName" />
		<property name="passwordParam" value="password" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/home/index.htmlx" />
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/resources/** = anon
				/app/** = anon
				/vcimage.htmlx = anon
				/menu/productSource/getRandom.htmlx = anon
				/menu/productSource/page.htmlx = anon
				/set/company/page.htmlx = anon
				/login.jsp = authc
				/index.jsp = authc
			</value>
		</property>
	</bean>


	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>
