<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd"
		>

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:db.properties,classpath:public_system.properties" />

	<context:component-scan base-package="com.shyl">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 开启这个配置，spring才能识别@Scheduled注解   -->  
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  
    <task:scheduler id="qbScheduler" pool-size="10"/>
    
	<!-- Mongo GridFS -->
	<bean id="gridFSDAO" class="com.shyl.common.util.GridFSDAO">
		<constructor-arg name="hostname" value="${mongo.gridfs.hostname}" />
		<constructor-arg name="port" value="${mongo.gridfs.port}" />
		<constructor-arg name="dbname" value="${mongo.gridfs.dbname}" />
	</bean>

    <!-- 配置线程池 -->  
    <bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
        <!-- 核心线程数量 -->  
    	<property name ="corePoolSize" value ="${Thread.corePoolSize}" />  
        <!-- 线程池维护线程所允许的空闲时间 -->  
   	 	<property name ="keepAliveSeconds" value ="${Thread.keepAliveSeconds}" />  
        <!-- 线程池维护线程的最大数量 -->  
    	<property name ="maxPoolSize" value ="${Thread.maxPoolSize}" />  
        <!-- 线程池所使用的缓冲队列 -->  
    	<property name ="queueCapacity" value ="${Thread.queueCapacity}" />  
    </bean>


	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<property name="driverClassName" value="${driverClassName}"></property>
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${maxActive}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="6000" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="mergeStat" /> -->
		<property name="filters" value="stat" />
	</bean>

	<bean id="hqlUtil" class="com.shyl.common.framework.util.HqlUtil">
		<property name="DBTYPE" value="mysql" />
		<property name="canNull" value="1" />
	</bean>

  	<bean id="jdbc" class="org.springframework.jdbc.core.JdbcTemplate">  
	    <constructor-arg ref="dataSource"></constructor-arg>  
	  </bean>

	<!-- 配置hibernate session工厂 -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.isolation">2</prop>
			</props>
		</property>
		<property name="entityInterceptor">
			<bean id="baseEntityInterceptor" class="com.shyl.common.framework.interceptor.BaseEntityInterceptor" />
		</property>
		<!-- 自动扫描注解方式配置的hibernate类文件 -->
		<property name="packagesToScan">
			<list>
				<value>com.shyl.sys.entity</value>
				<value>com.shyl.msc.menu.entity</value>
				<value>com.shyl.msc.set.entity</value>
				<value>com.shyl.msc.dm.entity</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean name="transactionManager"
		  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource" ></property>
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<cache:annotation-driven cache-manager="cacheManager" />
	<bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
		<property name="shared" value="true" />
	</bean>

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
    
    <!--由zk做session存储容器 -->
    <bean id="shiroSessionDAO" class="com.shyl.common.cache.dao.ShiroSessionDAO">
        <property name="clientTemplate" ref="myEhcacheTemplate" />
    </bean>
    <!--由zk做verifyCode存储容器 -->
    <bean id="verifyCodeDAO" class="com.shyl.common.cache.dao.VerifyCodeDAO">
        <property name="clientTemplate" ref="myEhcacheTemplate" />
    </bean>
    <bean id="taskLockDAO" class="com.shyl.common.cache.dao.TaskLockDAO">
        <property name="clientTemplate" ref="myEhcacheTemplate" />
    </bean>
    
    <bean id="myEhcacheTemplate" class="com.shyl.common.cache.client.MyEhcacheTemplate">
        <property name="ehCacheCacheManager" ref="cacheManager" />
    </bean>

</beans>