<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:public_system.properties" />

	<!-- Shiro securityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroMyRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
	</bean>

	<!--Session集群配置 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="sessionDAO" ref="shiroSessionDAO" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionIdCookie" ref="wapsession" />
	</bean>

	<!-- 需要使用cache的话加上这句 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:spring-shiro-ehcache.xml" />
	</bean>

	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID, 
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="wapsession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="WAPSESSIONID"/>
	</bean>

	<!-- 定时清理僵尸session，Shiro会启用一个后台守护线程定时执行清理操作 用户直接关闭浏览器造成的孤立会话 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="3600000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!--由zk做session存储容器 -->
    <bean id="shiroSessionDAO" class="com.shyl.common.cache.dao.ShiroSessionDAO">
        <property name="clientTemplate" ref="${shiroSessionTemplate}" />
        <property name="parentPath" value="/ADMIN_SESSIONS" />
    </bean>
    <!--由zk做verifyCode存储容器 -->
    <bean id="verifyCodeDAO" class="com.shyl.common.cache.dao.VerifyCodeDAO">
        <property name="clientTemplate" ref="${verifyCodeTemplate}" />
        <property name="parentPath" value="/ADMIN_VERIFYCODE" />
    </bean>
    <bean id="taskLockDAO" class="com.shyl.common.cache.dao.TaskLockDAO">
        <property name="clientTemplate" ref="${taskLockTemplate}" />
        <property name="parentPath" value="/ADMIN_TASKLOCK" />
    </bean>
    <bean id="lockCollection" class="com.shyl.common.cache.lock.LockCollection">
        <property name="lockFactory" ref="lockFactory" />
    </bean> 
    <bean id="lockFactory" class="com.shyl.common.cache.lock.LockFactory">
        <property name="cf" ref="curatorFramework" />
    </bean> 
    <bean id="myRedisTemplate" class="com.shyl.common.cache.client.MyRedisTemplate">
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>
    <bean id="zookeeperTemplate" class="com.shyl.common.cache.client.CuratorTemplate">
        <constructor-arg name="curatorFramework" ref="curatorFramework" />
        <property name="zkSerializer" ref="zkSerializer" />      
    </bean>
    <bean id="zkSerializer" class="org.I0Itec.zkclient.serialize.SerializableSerializer">
    </bean>
     <!-- 重连策略 -->
    <bean id="retryPolicy" class="org.apache.curator.retry.ExponentialBackoffRetry">
        <!-- 间隔时间基数 -->
        <constructor-arg index="0" value="1000" />
        <!-- 重连策略 -->
        <constructor-arg index="1" value="3" />
    </bean>

    <bean id="curatorFramework" class="org.apache.curator.framework.CuratorFrameworkFactory" factory-method="newClient" init-method="start">
        <constructor-arg index="0" value="${zkclient.zkServers}" />
        <!-- sessionTimeoutMs会话超时时间，单位为毫秒。默认是60000ms  -->
        <constructor-arg index="1" value="${zkclient.sessionTimeout}" />
        <!-- connectionTimeoutMs连接创建超时时间，单位毫秒，默认15000ms -->
        <constructor-arg index="2" value="${zkclient.connectionTimeout}" />
        <constructor-arg index="3" ref="retryPolicy" />
    </bean>
    
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilterhome" class="com.shyl.sys.service.realm.AuthenticationFilter">
		<property name="loginUrl" value="/home.jsp" />
	</bean>
	
	<bean id="thirdAuthenticationFilter" class="com.shyl.sys.service.realm.AuthenticationFilter">
		<property name="loginUrl" value="/thirdLogin/zs.htmlx" />
		<property name="successUrl" value="/home/index.htmlx" />
	</bean>

	<bean id="formAuthenticationFilter" class="com.shyl.sys.service.realm.AuthenticationFilter">
		<property name="usernameParam" value="userName" />
		<property name="passwordParam" value="password" />
		<property name="loginUrl" value="/login.jsp" />
		<property name="successUrl" value="/home/index.htmlx" />
	</bean>


	<!-- 项目自定义的Realm -->
	<bean id="shiroMyRealm" class="com.shyl.sys.service.realm.ShiroMyRealm">
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="filters">
			<util:map>
				<entry key="authchome" value-ref="formAuthenticationFilterhome" />
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="thirdAuth" value-ref="thirdAuthenticationFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/home.jsp = authc
				/login.jsp = authc
				/index.jsp = authc
				/thirdLogin/zs.htmlx=thirdAuth
			</value>
		</property>
	</bean>


	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>
