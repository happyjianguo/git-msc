<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:task="http://www.springframework.org/schema/task" xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:public_system.properties" />
	
	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.shyl" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="aspectj" expression="com.shyl.common.cache..*" /> 
	</context:component-scan>

	<!-- 开启这个配置，spring才能识别@Scheduled注解   -->  
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  
    <task:scheduler id="qbScheduler" pool-size="10"/>
    
    <!-- Mongo GridFS -->
	<bean id="gridFSDAO" class="com.shyl.common.util.GridFSDAO">
		<constructor-arg name="hostname" value="${mongo.gridfs.hostname}" />
		<constructor-arg name="port" value="${mongo.gridfs.port}" />
		<constructor-arg name="dbname" value="${mongo.gridfs.dbname}" />
	</bean>
	
    <!-- 配置线程池 -->  
    <bean id ="taskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
        <!-- 核心线程数量 -->  
    	<property name ="corePoolSize" value ="${Thread.corePoolSize}" />  
        <!-- 线程池维护线程所允许的空闲时间 -->  
   	 	<property name ="keepAliveSeconds" value ="${Thread.keepAliveSeconds}" />  
        <!-- 线程池维护线程的最大数量 -->  
    	<property name ="maxPoolSize" value ="${Thread.maxPoolSize}" />  
        <!-- 线程池所使用的缓冲队列 -->  
    	<property name ="queueCapacity" value ="${Thread.queueCapacity}" />  
    </bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory"   ref="JedisConnectionFactory" />
	</bean>

	<bean id="JedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:host-name="${redis.host}" p:port="${redis.port}"  p:pool-config-ref="poolConfig"/>

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	
    <import resource="dubbo-consumer.xml" />
    
    
    <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->  
<!-- <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">  
    <property name="brokerURL" value="tcp://localhost:61616"/>  
</bean>  
  
<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">  
    <property name="connectionFactory" ref="targetConnectionFactory"/>  
    <property name="maxConnections" value="10"/>  
</bean>  
  
<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">  
    <property name="targetConnectionFactory" ref="pooledConnectionFactory"/>  
</bean>   -->


</beans>