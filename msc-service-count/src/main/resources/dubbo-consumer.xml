<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        
    				    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd	
    					http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    
	<!--<dubbo:application name="dubbo_consumer" logger="slf4j" />-->
	
	<!-- 使用multicast广播注册中心暴露发现服务地址 -->
	<dubbo:registry protocol="zookeeper" address="${dubbo.registry.address}" file="${dubbo.registry.file.count}"/>
	<!-- 所有的服务不检查依赖 -->
	<dubbo:consumer check="false" />
	<!-- 监控中心配置 --> 
	<!-- <dubbo:monitor protocol="registry"/> -->
	
	<!-- 生成远程服务代理，可以和本地bean一样使用demoService -->
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.dm.service.IProductService" id="productService" />
    
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IDeliveryOrderDetailService" id="deliveryOrderDetailService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IDeliveryOrderService" id="deliveryOrderService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IInOutBoundDetailService" id="inOutBoundDetailService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IInOutBoundService" id="inOutBoundService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IPurchaseOrderPlanDetailService" id="purchaseOrderPlanDetailService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IPurchaseOrderPlanService" id="purchaseOrderPlanService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IPurchaseOrderDetailService" id="purchaseOrderDetailService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IPurchaseOrderService" id="purchaseOrderService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IReturnsOrderDetailService" id="returnsOrderDetailService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.order.service.IReturnsOrderService" id="returnsOrderService" />

    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.stl.service.IInvoiceDetailService" id="invoiceDetailService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.stl.service.IInvoiceService" id="invoiceService" />
	<dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.stl.service.ISettlementService" id="settlementService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.stl.service.ISettlementDetailService" id="settlementDetailService" />
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.stl.service.IPaymentService" id="paymentService" />
    
    <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.plan.service.IContractDetailService" id="contractDetailService" />
	<dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.plan.service.IContractService" id="contractService" />
	
	 <dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.stock.service.IHisStockDayService" id="hisStockDayService" />
	<dubbo:reference loadbalance="${dubbo.loadbalance}" interface="com.shyl.msc.b2b.stock.service.IVendorStockDayService" id="vendorStockDayService" />
	
</beans>